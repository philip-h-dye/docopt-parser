#

n=single
# alias x=' script -c "python3 ${n}.py" err '
alias x=' clear && logts -b log/single python3 ${n}.py '

# Otherwise, it picks opts from ../setup.cfg and dies looking for ./tests.

# !!! now using 'invoke test'
# No # # alias t=' clear && logts -b log/test pytest -c /dev/null '
# NO # # alias t=' clear && logts -b log/test ./py simple.py'

export PYTHONPATH=/home/phdyex/.local/lib/python3.8

# cease the warnings about a package that I do not maintain.
export PYTHONWARNINGS="ignore::DeprecationWarning:simplejson"

# !!! now using 'invoke test'
# NO # # alias t=' clear && logts -b log/. python parser.py '
# NO # alias t=' tst --general 63 '

alias c=' rm -f *.dot *.pdf && find . -name __pycache__ | xargs rm -rf '

alias _tst=' logts --quiet --base log    t/run-test.py '
alias _err=' logts --quiet --base error  t/run-test.py '
alias tst=' clear && _tst '
alias err=' clear && _err '

alias g=' tst --general '
alias p=' tst --program '
alias frag=' tst --fragment '
alias trail=' tst --trailing '

g=2
alias x=' g ${g} '
alias ex=' /usr/bin/emacs ./log/latest.txt '

alias trio="echo '# a b c / d e f / g h i / j k l / m n o'"
alias eterm=' emacs --load ~/.xemacs/my-ansi-term.el '


SAVED_GRAMMARS=ref/saved-grammar
alias save='( f=s/docopt.peg && set -x && cp $f ${SAVED_GRAMMARS}/$(ts --ref $f).peg )'

#

pt_target=tests
pt_opts=
alias pt='( c && export PYTHONPATH="t:.:${PYTHONPATH}" && logts -b log/test pytest -s ${pt_opts} ${pt_target} )'
alias px='( c && export PYTHONPATH="t:.:${PYTHONPATH}" && pytest -s ${pt_opts} ${pt_target} )'

#

# Wasn't there another feature here previously ?
function pytest-here() {
    export PYTHONPATH=".:t:tests:${PYTHONPATH}"
    logts -b log/test pytest -c /dev/null "$@"
}
alias pt-here=pytest-here
alias pthere=pytest-here

#------------------------------------------------------------------------------

# cbase=grammar/peg
cbase=grammar/python

# cgrp=develop
# ctgt=newline
# ctgt=blankline

cgrp=optdesc
# ctgt=list
ctgt=line

copt='-s -v'

alias cx=' clear && pytest-here ${copt} t/${cbase}/${cgrp}/${ctgt}.py '

#------------------------------------------------------------------------------
